apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: golang-test
  namespace: auto-deploy
spec:
  inputs:
    params:
    - default: ./...
      description: 'packages to test (default: ./...)'
      name: packages
    - default: -race -cover -v
      description: flags to use for the test command
      name: flags
    - default: auto
      description: value of module support
      name: GO111MODULE
    - default: go-unit
      description: Name to give the test results file.
      name: test-name
      type: string
    - description: GCS bucket and directory artifacts will be uploaded to. Should
        be in the form of 'gs://'
      name: artifacts-gcs
      type: string
    - default: gcr.io/kubeflow-ci/test-worker-py3:d67009b@sha256:e96d069db00159c03b95ed1064569bcd0a78acdc691f42b5025050370949007a
      description: The docker image to run the tests in
      name: test-image
      type: string
    resources:
    - description: The GitHub repo containing code to test
      name: source-repo
      type: git
  steps:
  - env:
    - name: GO111MODULE
      value: $(inputs.params.GO111MODULE)
    - name: PACKAGES
      value: $(inputs.params.packages)
    image: $(inputs.params.test-image)
    name: unit-test
    script: |
      #!/usr/bin/env bash
      set -x
      mkdir -p /workspace/artifacts
      echo Current Directory: $(pwd)
      go test $(inputs.params.packages) $(inputs.params.flags) 2>&1 | go-junit-report > /workspace/artifacts/junit_$(inputs.params.test-name).xml
      echo Test results:
      cat /workspace/artifacts/junit_$(inputs.params.test-name).xml
      echo test finished.
    workingDir: /workspace/$(inputs.resources.source-repo.name)
  - args:
    - -m
    - kubeflow.testing.tekton_client
    - junit-parse-and-upload
    - --artifacts-dir=/workspace/artifacts
    - --output-gcs=$(inputs.params.artifacts-gcs)
    command:
    - python
    env:
    - name: PYTHONPATH
      value: /srcCache/kubeflow/testing/py
    image: $(inputs.params.test-image)
    name: copy-artifacts

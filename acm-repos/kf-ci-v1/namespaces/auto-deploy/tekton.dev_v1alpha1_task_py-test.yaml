apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: py-test
  namespace: auto-deploy
spec:
  inputs:
    params:
    - description: GCS bucket and directory artifacts will be uploaded to. Should
        be in the form of 'gs://'
      name: artifacts-gcs
      type: string
    - default: ""
      description: It is the location of the test directory which contains all the
        unit tests. If we set it "", then it finds all the *_test.py files in the
        repository and run unit test over them.
      name: test-src-dir
      type: string
    - default: gcr.io/kubeflow-ci/test-worker-py3@sha256:a749d7fa4d77466c892a206d3adf0909e86717da898dbd12378e6cbed59ffbd3
      name: test-image
      type: string
    - default: py-unit
      description: Name to give the test results file.
      name: test-name
      type: string
    resources:
    - description: The GitHub repo containing code to test
      name: testing-repo
      type: git
  steps:
  - args:
    - -m
    - kubeflow.testing.test_py_checks
    - --artifacts_dir=/workspace/artifacts/junit_$(inputs.params.test-name)
    - --src_dir=/workspace/$(inputs.resources.testing-repo.name)/$(inputs.params.test-src-dir)
    command:
    - python
    env:
    - name: PYTHONPATH
      value: /srcCache/kubeflow/testing/py
    image: $(inputs.params.test-image)
    name: unit-test
  - args:
    - -m
    - kubeflow.testing.tekton_client
    - junit-parse-and-upload
    - --artifacts-dir=/workspace/artifacts
    - --output-gcs=$(inputs.params.artifacts-gcs)
    command:
    - python
    env:
    - name: PYTHONPATH
      value: /srcCache/kubeflow/testing/py
    image: $(inputs.params.test-image)
    name: copy-artifacts

apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  annotations:
    sidecar.istio.io/inject: "false"
  name: deploy-gcp-blueprint
  namespace: auto-deploy
spec:
  inputs:
    params:
    - default: kf-vbp-{uid}
      description: The name for the Kubeflow deployment
      name: name
      type: string
    - default: kubeflow-ci-deployment
      description: The project to deploy into.
      name: project
      type: string
    - default: kf-ci-management
      description: The name of the management cluster.
      name: management-cluster-name
      type: string
    - default: kubeflow-ci
      description: The project containing the management cluster
      name: management-project
      type: string
    - default: us-central1
      description: The location of the management cluster
      name: management-location
      type: string
    resources:
    - description: The GitHub repo containing kubeflow testing scripts
      name: testing-repo
      type: git
    - description: The GitHub repo containing the blueprint
      name: blueprint-repo
      type: git
  stepTemplate:
    env:
    - name: KUBECONFIG
      value: /workspace/kubeconfig
    image: gcr.io/kubeflow-ci/test-worker-py3:fb970ef@sha256:804c6cc8a73face69d79c60bcd85b93fa04218db9ee31127fb529b41fcab43ac
  steps:
  - command:
    - /workspace/$(inputs.resources.blueprint-repo.name)/kubeflow/hack/create_context.sh
    env:
    - name: PROJECT
      value: $(inputs.params.management-project)
    - name: REGION
      value: $(inputs.params.management-location)
    - name: NAME
      value: $(inputs.params.management-cluster-name)
    - name: NAMESPACE
      value: $(inputs.params.project)
    name: get-credential
  - command:
    - python
    - -m
    - kubeflow.testing.create_kf_from_gcp_blueprint
    - deploy
    - --name=$(inputs.params.name)
    - --blueprint-dir=/workspace/$(inputs.resources.blueprint-repo.name)/kubeflow
    - --management-context=$(inputs.params.management-cluster-name)
    - --labels-file=/etc/podinfo/labels
    env:
    - name: PYTHONPATH
      value: /workspace/$(inputs.resources.testing-repo.name)/py
    name: deploy-gcp
    volumeMounts:
    - mountPath: /etc/podinfo
      name: podinfo
    workingDir: /workspace/$(inputs.resources.blueprint-repo.name)/kubeflow
  volumes:
  - downwardAPI:
      items:
      - fieldRef:
          fieldPath: metadata.labels
        path: labels
    name: podinfo

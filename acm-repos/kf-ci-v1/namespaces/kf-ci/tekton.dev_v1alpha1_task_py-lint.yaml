apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: py-lint
  namespace: kf-ci
spec:
  inputs:
    params:
    - default: py-lint
      description: Name to give the test results file.
      name: test-name
      type: string
    - description: GCS bucket and directory artifacts will be uploaded to. Should
        be in the form of 'gs://'
      name: artifacts-gcs
      type: string
    - default: gcr.io/kubeflow-ci/test-worker:latest
      description: The docker image to run the tests in
      name: test-image
      type: string
    resources:
    - description: The GitHub repo containing code to test
      name: testing-repo
      type: git
  steps:
  - env:
    - name: PYTHONPATH
      value: /workspace/$(inputs.resources.testing-repo.name)/py
    image: $(inputs.params.test-image)
    name: py-lint
    script: |
      #!/usr/bin/env bash
      set -x
      mkdir -p /workspace/artifacts
      echo Current Directory: $(pwd)
      cd /workspace/$(inputs.resources.testing-repo.name)/py/kubeflow/testing/
      pytest py_lint_test.py -s \
       --rcfile=/workspace/$(inputs.resources.testing-repo.name)/.pylintrc \
       --timeout=500 \
       --junitxml=/workspace/artifacts/junit_$(inputs.params.test-name).xml
      echo Test results:
      cat /workspace/artifacts/junit_$(inputs.params.test-name).xml
      echo Test finished.
  - args:
    - -m
    - kubeflow.testing.tekton_client
    - junit-parse-and-upload
    - --artifacts-dir=/workspace/artifacts
    - --output-gcs=$(inputs.params.artifacts-gcs)
    command:
    - python
    env:
    - name: PYTHONPATH
      value: /workspace/$(inputs.resources.testing-repo.name)/py
    image: $(inputs.params.test-image)
    name: copy-artifacts
